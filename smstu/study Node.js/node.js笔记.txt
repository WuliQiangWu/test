node.js 和commenjs 的区别

jQuery是库，commenjs是一套规范

模块化与包管理工具：
依赖关系                                                                                        定义
命名空间     		<-（纠结的编程体验）                          标识
代码组织                                                                                        引用

node.js借鉴commenjs模块组织的理念，并且基于commenjs的规范，实现了一套模块管理系统，在node.js里面，每个js文件可以看作一个独立的模块，不需要有命名空间，不用担心变量的污染和方式使用时的隔离，整个文件中的代码可以非常自然的组织起来，同时这些独立的模块（文件）通过彼此的依赖和引入，可以组合起来形成一个更强大和完整的模块。

在node.js里面文件和模块是一一对应的，模块大致可以分为：核心模块，本地模块，和通过npm安装的第三方模块。
根据模块类型，有几种引用模块的方式。
可以通过模块的路径来引用这个模块，也可以通过模块名称来引用。
如果用名称引用非可行模块的话，node最终会把模块名映射到对应的模块文件的路径，包含了核心函数的核心模块,会在node启动时被预先加载，非可行模块包括使用npm安装的第三方模块，以及自己创建的本地模块。

node.js模块的流程：
创建模块	
导出模块
加载模块
使用模块

module.exports  和 exports 的区别：
如果你想把你的模块成为一个特别的对象模型，使用module.exports （真实存在的东西）
如果你想把你的模块成为一个传统的模块实例，使用exports	（是modile.exports的一个辅助方法）

Node.js API

一个网站的解析（以慕课网为例 http://imooc.com/sourse/list）

url.parse() //可以解析地址

protocol： "http"            (底层使用的协议)
slashes:true                (协议双斜线)
auth:
host:'imooc.com'             (域名)
port:                        (端口 默认80端口)
hostname:'imooc.com'         (主机名)
hash:                         (哈希值，页面上的某个锚点，加#把页面滚到到当前位置)
search:                        (查询字符串参数)
query:                          (发送给http服务器的数据)
pathname:'/course/list'           (访问资源的路径名)
path:'/course/list'                 (路径)
href:'http://imooc.com/sourse/list'  (没被解析的超链接)

url.format() //把解析的地址合并成一个完整的地址
url.resolve()
												               (表示用什么分割)	  (表示分割的标识从那开始分割)
querystring.parse('name:scote,surse:jodae,course:node,form:',      ','      ,    ':')
querystring.escape() //转义字符
querystring.unescape() //反转义字符

http协议知识填坑：
http是一种协议。
http客户端发起请求，创建端口
http服务器在端口监听客户端请求
http服务器向客户端返回状态和内容

1.浏览器搜索自身的DNS缓存（保存时间大概一分钟）
2.搜索操作系统自身的的DNS缓存（浏览器没有找到缓存或者缓存已经失效，）
3.读取本地的host文件
4.浏览器发起一个DNS的系统调用
5.浏览器获得域名对应的IP地址之后，发起HTTP“三次握手”
6.TCP/IP连接建立起来之后，浏览器就可以向服务器发送HTTP请求了，使用了比如说，用HTTP的GET方法请求一个根域里的一个域名，协议可以采用HTTP 1.0的一个协议。
7.服务器端接收到了这个请求，根据路径参数，经过后端的一些处理之后，把浏览器的一个结果的数据返回给浏览器，如果是页面就会把完整的HTML页面代码返回给浏览器。
8.浏览器拿到了网页的完整的HTML页面代码，在解析和渲染这个页面的时候，里面的JS,CSS,图片静态资源，他们同样也是一个个HTTP请求都需要经过上面的主要的七个步骤
9.卢兰奇拿到的资源，对页面进行渲染，把完整的页面呈现给用户。


(1.宽带运营商服务器查看本身的缓存
2.运营商服务器发起的一个迭代DNS解析的请求，
运营商服务器把结果返回操作系统内核同时缓存起来
操作系统内核把结果返回浏览器
最终浏览器拿到了对应的IP地址)


