为什么需要使用MVC？
    1.代码规模越来越大，切分职责是大势所趋。
    2.为了复用：很多逻辑是一模一样的。
    3.为了后期维护方便：修改一块功能不影响其他功能

MVC只是手段，终极目标是模块化和复用

前端实现MVC的困难

浏览器加载脚本                 操作DOM的代码必须等待整个页面全部加载完成
      ↓                       多个JS文件之间如果出现以来，程序员必须自己解决
      ↓                       JS的原型继承也会给前端编程带来了很多困难
      ↓
加载完成之后JIT编译执行


Controller使用过程中的注意点：
不要试图复用controller,一个控制器一般只负责一小块视图。
不要再controller中操作DOM，这不是控制器的职责。
不要再Controller里面做数据格式化，ng有很好的表单控件。
不要在controller里面做数据过滤，ng有$filter服务。
一般来说，controller是不会互相调用的，控制器之间的交互会通过事件进行。

Modle

神奇的$scope
$scope是一个POJO(Plain Old JavaScript Object)
$scope提供了一些工具方法$watch()/$apply()
$scope是表达式执行的环境(或者叫做作用域)
$scope是一个树形结构，与DOM标签平行
子$scope对象会继承父$scope上的属性和方法
每一个Angular应用只有一个跟$scope对象（一般位于ng-app上）
$scope可以传播事件，类似DOM事件，可以向上也可以向下
$scope不仅是MVC的基础，也是后面实现双向数据绑定的基础

SEO :搜索引擎优化